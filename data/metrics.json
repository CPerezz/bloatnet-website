{
    "initial_metrics": [
        {
            "id": "read-write-performance",
            "title": "Read/Write Performance vs Tree Depth",
            "category": "performance",
            "requester_badges": [
                "Stateless-Consensus",
                "Geth"
            ],
            "description": "Measuring how I/O performance degrades with respect to state growth and tree depth at each time interval. Critical for understanding performance bottlenecks as the state size increases."
        },
        {
            "id": "client-db-breaking",
            "title": "Client Database Breaking Points",
            "category": "database",
            "requester_badges": [
                "Stateless-Consensus",
                "Geth"
            ],
            "description": "Identifying when and where client DB implementations break due to inability to hold X[G/T]Bs of state. Monitor sync failures, OOM errors, and other critical breakdowns."
        },
        {
            "id": "block-creation-time",
            "title": "Block Creation Time & Flamegraph Analysis",
            "category": "execution",
            "requester_badges": [
                "Stateless-Consensus",
                "Geth"
            ],
            "description": "Measuring block building/execution time changes with gas limit increases. Includes detailed flamegraph analysis of computation, I/O, swapping, and other performance factors."
        },
        {
            "id": "mpt-witness-size",
            "title": "MPT Witness Size Analysis",
            "category": "witness",
            "requester_badges": [
                "Stateless-Consensus",
                "Geth"
            ],
            "description": "Tracking multiproof size for state changes and deep-depth tree values. While 3x DB growth may only increase depth by ~2 levels, monitoring witness size impact is crucial."
        }
    ],
    "additional_metrics": [
        {
            "id": "disk-ram-usage",
            "title": "Disk Growth & RAM Usage per Block",
            "category": "resources",
            "requester_badges": [
                "Stateless-Consensus",
                "Geth"
            ],
            "description": "Self-explanatory tracking of disk space consumption and RAM usage for each block executed/processed. Essential for resource planning and hardware requirements."
        },
        {
            "id": "large-hash-maps",
            "title": "Large Hash Map Performance",
            "category": "database",
            "requester_badges": [
                "Stateless-Consensus",
                "Geth"
            ],
            "description": "Testing client performance with extremely large hash maps and in-memory data structures. Crucial for understanding memory bottlenecks."
        },
        {
            "id": "account-trie-depth",
            "title": "Account Trie Depth Impact",
            "category": "trie",
            "requester_badges": [
                "Ethereum Foundation"
            ],
            "description": "Measuring the impact of increasing account trie depth on sync times and storage requirements across different client implementations."
        },
        {
            "id": "gas-limit-scaling",
            "title": "Gas Limit Scaling Effects",
            "category": "execution",
            "requester_badges": [
                "Core Developers"
            ],
            "description": "Analyzing how different gas limit increases affect block processing time, memory usage, and overall network performance."
        },
        {
            "id": "state-rent-simulation",
            "title": "State Rent Impact Simulation",
            "category": "economics",
            "requester_badges": [
                "Research Team"
            ],
            "description": "Simulating various state rent mechanisms and their impact on network economics and state growth patterns."
        },
        {
            "id": "verkle-migration",
            "title": "Verkle Tree Migration Metrics",
            "category": "verkle",
            "requester_badges": [
                "Verkle Team"
            ],
            "description": "Tracking performance metrics during the migration from MPT to Verkle trees, including witness sizes and verification times."
        }
    ],
    "categories": {
        "performance": {
            "name": "Performance",
            "color": "#a855f7",
            "icon": "âš¡"
        },
        "database": {
            "name": "Database",
            "color": "#3b82f6",
            "icon": "ðŸ’¾"
        },
        "execution": {
            "name": "Execution",
            "color": "#10b981",
            "icon": "ðŸ”„"
        },
        "witness": {
            "name": "Witness",
            "color": "#f59e0b",
            "icon": "ðŸ“‹"
        },
        "resources": {
            "name": "Resources",
            "color": "#ef4444",
            "icon": "ðŸ“Š"
        },
        "trie": {
            "name": "Trie Structure",
            "color": "#8b5cf6",
            "icon": "ðŸŒ³"
        },
        "economics": {
            "name": "Economics",
            "color": "#06b6d4",
            "icon": "ðŸ’°"
        },
        "verkle": {
            "name": "Verkle Trees",
            "color": "#f97316",
            "icon": "ðŸ”—"
        }
    },
    "requesters": {
        "Stateless-Consensus": {
            "name": "Stateless-Consensus",
            "color": "#a855f7",
            "url": "https://stateless.fyi/"
        },
        "Geth": {
            "name": "Geth",
            "color": "#8b5cf6",
            "url": "https://geth.ethereum.org/"
        },
        "Ethereum Foundation": {
            "name": "Ethereum Foundation",
            "color": "#3b82f6",
            "url": "https://ethereum.foundation/"
        },
        "Core Developers": {
            "name": "Core Developers",
            "color": "#10b981",
            "url": null
        },
        "Research Team": {
            "name": "Research Team",
            "color": "#f59e0b",
            "url": null
        },
        "Verkle Team": {
            "name": "Verkle Team",
            "color": "#f97316",
            "url": null
        }
    }
}